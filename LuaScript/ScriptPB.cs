// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace LuaScriptPB {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class ScriptPB {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_LuaScriptPB_LScriptRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::LuaScriptPB.LScriptRequest, global::LuaScriptPB.LScriptRequest.Builder> internal__static_LuaScriptPB_LScriptRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_LuaScriptPB_LScriptRequest_call__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::LuaScriptPB.LScriptRequest.Types.call, global::LuaScriptPB.LScriptRequest.Types.call.Builder> internal__static_LuaScriptPB_LScriptRequest_call__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_LuaScriptPB_LScriptResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::LuaScriptPB.LScriptResponse, global::LuaScriptPB.LScriptResponse.Builder> internal__static_LuaScriptPB_LScriptResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_LuaScriptPB_LScriptResponse_result__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::LuaScriptPB.LScriptResponse.Types.result, global::LuaScriptPB.LScriptResponse.Types.result.Builder> internal__static_LuaScriptPB_LScriptResponse_result__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static ScriptPB() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "Cg5TY3JpcHRQQi5wcm90bxILTHVhU2NyaXB0UEIihwEKDkxTY3JpcHRSZXF1" + 
          "ZXN0EjIKCHJlcXVlc3RzGAEgAygLMiAuTHVhU2NyaXB0UEIuTFNjcmlwdFJl" + 
          "cXVlc3QuY2FsbBpBCgRjYWxsEhAKCHNjcmlwdE5vGAEgAigFEhYKC1JlcGVh" + 
          "dGVUaW1lGAIgAigFOgExEg8KB2NvbnRlbnQYAyACKAkidgoPTFNjcmlwdFJl" + 
          "c3BvbnNlEjYKCXJlc3BvbnNlcxgBIAMoCzIjLkx1YVNjcmlwdFBCLkxTY3Jp" + 
          "cHRSZXNwb25zZS5yZXN1bHQaKwoGcmVzdWx0EhAKCHNjcmlwdE5vGAEgAigF" + 
          "Eg8KB2NvbnRlbnQYAiACKAU=");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_LuaScriptPB_LScriptRequest__Descriptor = Descriptor.MessageTypes[0];
        internal__static_LuaScriptPB_LScriptRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::LuaScriptPB.LScriptRequest, global::LuaScriptPB.LScriptRequest.Builder>(internal__static_LuaScriptPB_LScriptRequest__Descriptor,
                new string[] { "Requests", });
        internal__static_LuaScriptPB_LScriptRequest_call__Descriptor = internal__static_LuaScriptPB_LScriptRequest__Descriptor.NestedTypes[0];
        internal__static_LuaScriptPB_LScriptRequest_call__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::LuaScriptPB.LScriptRequest.Types.call, global::LuaScriptPB.LScriptRequest.Types.call.Builder>(internal__static_LuaScriptPB_LScriptRequest_call__Descriptor,
                new string[] { "ScriptNo", "RepeateTime", "Content", });
        internal__static_LuaScriptPB_LScriptResponse__Descriptor = Descriptor.MessageTypes[1];
        internal__static_LuaScriptPB_LScriptResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::LuaScriptPB.LScriptResponse, global::LuaScriptPB.LScriptResponse.Builder>(internal__static_LuaScriptPB_LScriptResponse__Descriptor,
                new string[] { "Responses", });
        internal__static_LuaScriptPB_LScriptResponse_result__Descriptor = internal__static_LuaScriptPB_LScriptResponse__Descriptor.NestedTypes[0];
        internal__static_LuaScriptPB_LScriptResponse_result__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::LuaScriptPB.LScriptResponse.Types.result, global::LuaScriptPB.LScriptResponse.Types.result.Builder>(internal__static_LuaScriptPB_LScriptResponse_result__Descriptor,
                new string[] { "ScriptNo", "Content", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class LScriptRequest : pb::GeneratedMessage<LScriptRequest, LScriptRequest.Builder> {
    private LScriptRequest() { }
    private static readonly LScriptRequest defaultInstance = new LScriptRequest().MakeReadOnly();
    private static readonly string[] _lScriptRequestFieldNames = new string[] { "requests" };
    private static readonly uint[] _lScriptRequestFieldTags = new uint[] { 10 };
    public static LScriptRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LScriptRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LScriptRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::LuaScriptPB.ScriptPB.internal__static_LuaScriptPB_LScriptRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LScriptRequest, LScriptRequest.Builder> InternalFieldAccessors {
      get { return global::LuaScriptPB.ScriptPB.internal__static_LuaScriptPB_LScriptRequest__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public static class Types {
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
      [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
      public sealed partial class call : pb::GeneratedMessage<call, call.Builder> {
        private call() { }
        private static readonly call defaultInstance = new call().MakeReadOnly();
        private static readonly string[] _callFieldNames = new string[] { "RepeateTime", "content", "scriptNo" };
        private static readonly uint[] _callFieldTags = new uint[] { 16, 26, 8 };
        public static call DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override call DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override call ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::LuaScriptPB.ScriptPB.internal__static_LuaScriptPB_LScriptRequest_call__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<call, call.Builder> InternalFieldAccessors {
          get { return global::LuaScriptPB.ScriptPB.internal__static_LuaScriptPB_LScriptRequest_call__FieldAccessorTable; }
        }
        
        public const int ScriptNoFieldNumber = 1;
        private bool hasScriptNo;
        private int scriptNo_;
        public bool HasScriptNo {
          get { return hasScriptNo; }
        }
        public int ScriptNo {
          get { return scriptNo_; }
        }
        
        public const int RepeateTimeFieldNumber = 2;
        private bool hasRepeateTime;
        private int repeateTime_ = 1;
        public bool HasRepeateTime {
          get { return hasRepeateTime; }
        }
        public int RepeateTime {
          get { return repeateTime_; }
        }
        
        public const int ContentFieldNumber = 3;
        private bool hasContent;
        private string content_ = "";
        public bool HasContent {
          get { return hasContent; }
        }
        public string Content {
          get { return content_; }
        }
        
        public override bool IsInitialized {
          get {
            if (!hasScriptNo) return false;
            if (!hasRepeateTime) return false;
            if (!hasContent) return false;
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          int size = SerializedSize;
          string[] field_names = _callFieldNames;
          if (hasScriptNo) {
            output.WriteInt32(1, field_names[2], ScriptNo);
          }
          if (hasRepeateTime) {
            output.WriteInt32(2, field_names[0], RepeateTime);
          }
          if (hasContent) {
            output.WriteString(3, field_names[1], Content);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            
            size = 0;
            if (hasScriptNo) {
              size += pb::CodedOutputStream.ComputeInt32Size(1, ScriptNo);
            }
            if (hasRepeateTime) {
              size += pb::CodedOutputStream.ComputeInt32Size(2, RepeateTime);
            }
            if (hasContent) {
              size += pb::CodedOutputStream.ComputeStringSize(3, Content);
            }
            size += UnknownFields.SerializedSize;
            memoizedSerializedSize = size;
            return size;
          }
        }
        
        public static call ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static call ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static call ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static call ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static call ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static call ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static call ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static call ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static call ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static call ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private call MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(call prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
        public sealed partial class Builder : pb::GeneratedBuilder<call, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(call cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private call result;
          
          private call PrepareBuilder() {
            if (resultIsReadOnly) {
              call original = result;
              result = new call();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override call MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::LuaScriptPB.LScriptRequest.Types.call.Descriptor; }
          }
          
          public override call DefaultInstanceForType {
            get { return global::LuaScriptPB.LScriptRequest.Types.call.DefaultInstance; }
          }
          
          public override call BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is call) {
              return MergeFrom((call) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(call other) {
            if (other == global::LuaScriptPB.LScriptRequest.Types.call.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasScriptNo) {
              ScriptNo = other.ScriptNo;
            }
            if (other.HasRepeateTime) {
              RepeateTime = other.RepeateTime;
            }
            if (other.HasContent) {
              Content = other.Content;
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_callFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _callFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 8: {
                  result.hasScriptNo = input.ReadInt32(ref result.scriptNo_);
                  break;
                }
                case 16: {
                  result.hasRepeateTime = input.ReadInt32(ref result.repeateTime_);
                  break;
                }
                case 26: {
                  result.hasContent = input.ReadString(ref result.content_);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasScriptNo {
            get { return result.hasScriptNo; }
          }
          public int ScriptNo {
            get { return result.ScriptNo; }
            set { SetScriptNo(value); }
          }
          public Builder SetScriptNo(int value) {
            PrepareBuilder();
            result.hasScriptNo = true;
            result.scriptNo_ = value;
            return this;
          }
          public Builder ClearScriptNo() {
            PrepareBuilder();
            result.hasScriptNo = false;
            result.scriptNo_ = 0;
            return this;
          }
          
          public bool HasRepeateTime {
            get { return result.hasRepeateTime; }
          }
          public int RepeateTime {
            get { return result.RepeateTime; }
            set { SetRepeateTime(value); }
          }
          public Builder SetRepeateTime(int value) {
            PrepareBuilder();
            result.hasRepeateTime = true;
            result.repeateTime_ = value;
            return this;
          }
          public Builder ClearRepeateTime() {
            PrepareBuilder();
            result.hasRepeateTime = false;
            result.repeateTime_ = 1;
            return this;
          }
          
          public bool HasContent {
            get { return result.hasContent; }
          }
          public string Content {
            get { return result.Content; }
            set { SetContent(value); }
          }
          public Builder SetContent(string value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasContent = true;
            result.content_ = value;
            return this;
          }
          public Builder ClearContent() {
            PrepareBuilder();
            result.hasContent = false;
            result.content_ = "";
            return this;
          }
        }
        static call() {
          object.ReferenceEquals(global::LuaScriptPB.ScriptPB.Descriptor, null);
        }
      }
      
    }
    #endregion
    
    public const int RequestsFieldNumber = 1;
    private pbc::PopsicleList<global::LuaScriptPB.LScriptRequest.Types.call> requests_ = new pbc::PopsicleList<global::LuaScriptPB.LScriptRequest.Types.call>();
    public scg::IList<global::LuaScriptPB.LScriptRequest.Types.call> RequestsList {
      get { return requests_; }
    }
    public int RequestsCount {
      get { return requests_.Count; }
    }
    public global::LuaScriptPB.LScriptRequest.Types.call GetRequests(int index) {
      return requests_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::LuaScriptPB.LScriptRequest.Types.call element in RequestsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _lScriptRequestFieldNames;
      if (requests_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], requests_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::LuaScriptPB.LScriptRequest.Types.call element in RequestsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static LScriptRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LScriptRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LScriptRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LScriptRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LScriptRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LScriptRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LScriptRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LScriptRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LScriptRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LScriptRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LScriptRequest MakeReadOnly() {
      requests_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LScriptRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<LScriptRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LScriptRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LScriptRequest result;
      
      private LScriptRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          LScriptRequest original = result;
          result = new LScriptRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LScriptRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::LuaScriptPB.LScriptRequest.Descriptor; }
      }
      
      public override LScriptRequest DefaultInstanceForType {
        get { return global::LuaScriptPB.LScriptRequest.DefaultInstance; }
      }
      
      public override LScriptRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LScriptRequest) {
          return MergeFrom((LScriptRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LScriptRequest other) {
        if (other == global::LuaScriptPB.LScriptRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.requests_.Count != 0) {
          result.requests_.Add(other.requests_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_lScriptRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _lScriptRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.requests_, global::LuaScriptPB.LScriptRequest.Types.call.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::LuaScriptPB.LScriptRequest.Types.call> RequestsList {
        get { return PrepareBuilder().requests_; }
      }
      public int RequestsCount {
        get { return result.RequestsCount; }
      }
      public global::LuaScriptPB.LScriptRequest.Types.call GetRequests(int index) {
        return result.GetRequests(index);
      }
      public Builder SetRequests(int index, global::LuaScriptPB.LScriptRequest.Types.call value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.requests_[index] = value;
        return this;
      }
      public Builder SetRequests(int index, global::LuaScriptPB.LScriptRequest.Types.call.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.requests_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddRequests(global::LuaScriptPB.LScriptRequest.Types.call value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.requests_.Add(value);
        return this;
      }
      public Builder AddRequests(global::LuaScriptPB.LScriptRequest.Types.call.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.requests_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeRequests(scg::IEnumerable<global::LuaScriptPB.LScriptRequest.Types.call> values) {
        PrepareBuilder();
        result.requests_.Add(values);
        return this;
      }
      public Builder ClearRequests() {
        PrepareBuilder();
        result.requests_.Clear();
        return this;
      }
    }
    static LScriptRequest() {
      object.ReferenceEquals(global::LuaScriptPB.ScriptPB.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class LScriptResponse : pb::GeneratedMessage<LScriptResponse, LScriptResponse.Builder> {
    private LScriptResponse() { }
    private static readonly LScriptResponse defaultInstance = new LScriptResponse().MakeReadOnly();
    private static readonly string[] _lScriptResponseFieldNames = new string[] { "responses" };
    private static readonly uint[] _lScriptResponseFieldTags = new uint[] { 10 };
    public static LScriptResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LScriptResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LScriptResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::LuaScriptPB.ScriptPB.internal__static_LuaScriptPB_LScriptResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LScriptResponse, LScriptResponse.Builder> InternalFieldAccessors {
      get { return global::LuaScriptPB.ScriptPB.internal__static_LuaScriptPB_LScriptResponse__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public static class Types {
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
      [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
      public sealed partial class result : pb::GeneratedMessage<result, result.Builder> {
        private result() { }
        private static readonly result defaultInstance = new result().MakeReadOnly();
        private static readonly string[] _resultFieldNames = new string[] { "content", "scriptNo" };
        private static readonly uint[] _resultFieldTags = new uint[] { 16, 8 };
        public static result DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override result DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override result ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::LuaScriptPB.ScriptPB.internal__static_LuaScriptPB_LScriptResponse_result__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<result, result.Builder> InternalFieldAccessors {
          get { return global::LuaScriptPB.ScriptPB.internal__static_LuaScriptPB_LScriptResponse_result__FieldAccessorTable; }
        }
        
        public const int ScriptNoFieldNumber = 1;
        private bool hasScriptNo;
        private int scriptNo_;
        public bool HasScriptNo {
          get { return hasScriptNo; }
        }
        public int ScriptNo {
          get { return scriptNo_; }
        }
        
        public const int ContentFieldNumber = 2;
        private bool hasContent;
        private int content_;
        public bool HasContent {
          get { return hasContent; }
        }
        public int Content {
          get { return content_; }
        }
        
        public override bool IsInitialized {
          get {
            if (!hasScriptNo) return false;
            if (!hasContent) return false;
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          int size = SerializedSize;
          string[] field_names = _resultFieldNames;
          if (hasScriptNo) {
            output.WriteInt32(1, field_names[1], ScriptNo);
          }
          if (hasContent) {
            output.WriteInt32(2, field_names[0], Content);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            
            size = 0;
            if (hasScriptNo) {
              size += pb::CodedOutputStream.ComputeInt32Size(1, ScriptNo);
            }
            if (hasContent) {
              size += pb::CodedOutputStream.ComputeInt32Size(2, Content);
            }
            size += UnknownFields.SerializedSize;
            memoizedSerializedSize = size;
            return size;
          }
        }
        
        public static result ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static result ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static result ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static result ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static result ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static result ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static result ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static result ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static result ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static result ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private result MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(result prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
        public sealed partial class Builder : pb::GeneratedBuilder<result, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(result cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private result result;
          
          private result PrepareBuilder() {
            if (resultIsReadOnly) {
              result original = result;
              result = new result();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override result MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::LuaScriptPB.LScriptResponse.Types.result.Descriptor; }
          }
          
          public override result DefaultInstanceForType {
            get { return global::LuaScriptPB.LScriptResponse.Types.result.DefaultInstance; }
          }
          
          public override result BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is result) {
              return MergeFrom((result) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(result other) {
            if (other == global::LuaScriptPB.LScriptResponse.Types.result.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasScriptNo) {
              ScriptNo = other.ScriptNo;
            }
            if (other.HasContent) {
              Content = other.Content;
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_resultFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _resultFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 8: {
                  result.hasScriptNo = input.ReadInt32(ref result.scriptNo_);
                  break;
                }
                case 16: {
                  result.hasContent = input.ReadInt32(ref result.content_);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasScriptNo {
            get { return result.hasScriptNo; }
          }
          public int ScriptNo {
            get { return result.ScriptNo; }
            set { SetScriptNo(value); }
          }
          public Builder SetScriptNo(int value) {
            PrepareBuilder();
            result.hasScriptNo = true;
            result.scriptNo_ = value;
            return this;
          }
          public Builder ClearScriptNo() {
            PrepareBuilder();
            result.hasScriptNo = false;
            result.scriptNo_ = 0;
            return this;
          }
          
          public bool HasContent {
            get { return result.hasContent; }
          }
          public int Content {
            get { return result.Content; }
            set { SetContent(value); }
          }
          public Builder SetContent(int value) {
            PrepareBuilder();
            result.hasContent = true;
            result.content_ = value;
            return this;
          }
          public Builder ClearContent() {
            PrepareBuilder();
            result.hasContent = false;
            result.content_ = 0;
            return this;
          }
        }
        static result() {
          object.ReferenceEquals(global::LuaScriptPB.ScriptPB.Descriptor, null);
        }
      }
      
    }
    #endregion
    
    public const int ResponsesFieldNumber = 1;
    private pbc::PopsicleList<global::LuaScriptPB.LScriptResponse.Types.result> responses_ = new pbc::PopsicleList<global::LuaScriptPB.LScriptResponse.Types.result>();
    public scg::IList<global::LuaScriptPB.LScriptResponse.Types.result> ResponsesList {
      get { return responses_; }
    }
    public int ResponsesCount {
      get { return responses_.Count; }
    }
    public global::LuaScriptPB.LScriptResponse.Types.result GetResponses(int index) {
      return responses_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::LuaScriptPB.LScriptResponse.Types.result element in ResponsesList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _lScriptResponseFieldNames;
      if (responses_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], responses_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::LuaScriptPB.LScriptResponse.Types.result element in ResponsesList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static LScriptResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LScriptResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LScriptResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LScriptResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LScriptResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LScriptResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LScriptResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LScriptResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LScriptResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LScriptResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LScriptResponse MakeReadOnly() {
      responses_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LScriptResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<LScriptResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LScriptResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LScriptResponse result;
      
      private LScriptResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          LScriptResponse original = result;
          result = new LScriptResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LScriptResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::LuaScriptPB.LScriptResponse.Descriptor; }
      }
      
      public override LScriptResponse DefaultInstanceForType {
        get { return global::LuaScriptPB.LScriptResponse.DefaultInstance; }
      }
      
      public override LScriptResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LScriptResponse) {
          return MergeFrom((LScriptResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LScriptResponse other) {
        if (other == global::LuaScriptPB.LScriptResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.responses_.Count != 0) {
          result.responses_.Add(other.responses_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_lScriptResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _lScriptResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.responses_, global::LuaScriptPB.LScriptResponse.Types.result.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::LuaScriptPB.LScriptResponse.Types.result> ResponsesList {
        get { return PrepareBuilder().responses_; }
      }
      public int ResponsesCount {
        get { return result.ResponsesCount; }
      }
      public global::LuaScriptPB.LScriptResponse.Types.result GetResponses(int index) {
        return result.GetResponses(index);
      }
      public Builder SetResponses(int index, global::LuaScriptPB.LScriptResponse.Types.result value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.responses_[index] = value;
        return this;
      }
      public Builder SetResponses(int index, global::LuaScriptPB.LScriptResponse.Types.result.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.responses_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddResponses(global::LuaScriptPB.LScriptResponse.Types.result value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.responses_.Add(value);
        return this;
      }
      public Builder AddResponses(global::LuaScriptPB.LScriptResponse.Types.result.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.responses_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeResponses(scg::IEnumerable<global::LuaScriptPB.LScriptResponse.Types.result> values) {
        PrepareBuilder();
        result.responses_.Add(values);
        return this;
      }
      public Builder ClearResponses() {
        PrepareBuilder();
        result.responses_.Clear();
        return this;
      }
    }
    static LScriptResponse() {
      object.ReferenceEquals(global::LuaScriptPB.ScriptPB.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
